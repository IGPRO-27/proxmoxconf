* Clonage partiel de odoo et update (méthode automatisée)
#+BEGIN_SRC sh
#!/bin/bash
# Ce script met à jour odoo selon l'état d'avancement du projet sur le
# dépôt officiel odoo sur github

# La ligne suivante  détermine si le dépôt courant est  sur la branche
# 8.0 ou 9.0
branche=$(git branch -r | awk '{FS="/"} /->/ {print $3}')

# On interroge la date du dernier commit disponible sur le dépôt local
# et on le format de sorte à l'utiliser dans la prochaine étape
date_curr_HEAD=$(git show HEAD --format=%ci | head -1 | sed 's/\+.*//;s/ $//;s/$/Z/;s/ /T/')

# On interroge github au travers de  son API pour compter le nombre de
# commit que le dépôt local a en retard en utilisation since date_curr_HEAD
number_commits_forward=$(curl -si "https://api.github.com/repos/odoo/odoo/commits?sha=$branche&since=$date_curr_HEAD" |  grep \"commit\"  | wc -l)

# Si retard on fetch les commits manquants
if [ $number_commits_forward -gt 0 ]; then
    git fetch --depth $number_commits_forward
else
    echo "There is no new commits"
fi

#+END_SRC
* Clonage partiel de odoo et mise à jour (méthode insatisfaisante)
Pour odoo9
#+BEGIN_SRC sh
ssh dev@devo9.local
cd
cd odoo
git clone https://www.github.com/odoo/odoo --depth 2 --branch 9.0 --single-branch .
#+END_SRC
Pour odoo8
#+BEGIN_SRC sh
ssh dev@devo8.local
cd
cd odoo
git clone https://www.github.com/odoo/odoo --depth 2 --branch 8.0 --single-branch .
#+END_SRC
Il sera par la suite possible de faire des fetch avec l'option ~--depth~
Il faudra toutefois savoir le nombre de commits qui ont été ajoutés depuis.
La commande ~git fetch~ met à jour la branche ~remotes/origin/9.0~ et laisse la branche ~9.0~ intacte jusqu'au merge.
~git branch -av~ donne un listing de toutes les branches hébergées dans le dépôt local.
#+BEGIN_EXAMPLE
$ git branch -av
 * 9.0                 7c11d4e [FIX] web_editor: minor tweaks IE11
   remotes/origin/9.0  7c11d4e [FIX] web_editor: minor tweaks IE11
   remotes/origin/HEAD -> origin/9.0
$ git log --oneline
7c11d4e [FIX] web_editor: minor tweaks IE11
9c594cb [FIX] website: optimize SEO in other languages than the default one
#+END_EXAMPLE
Après près de 12h nous allons tenter de mettre à jour notre dépôt odoo.
On va tester un ~git fetch --depth 2~
#+BEGIN_EXAMPLE
$ git fetch --depth 2
remote: Counting objects: 22, donne.
remote: Compressing objects: 100% (6/6), donne.
remote: Total 22 (delta 20), reused 18 (delta 16), pack-reused 0
Unpacking objects: 100% (22/22), donne.
Depuis https://www.github.com/odoo/odoo
+ 7c11d4e...ce784ae 9.0        -> origin/9.0  *(mise à jour forcée)*
#+END_EXAMPLE
La dernière ligne de sortie de la commande nous renseigne sur l'état des lieux *(mise à jour forcée)*

~git branch -av~ de nouveau nous donne un aperçu de l'effet de la commande fetch.

La branche ~remotes/origin/9.0~ qui correspond à l'état du remote a avancé.
#+BEGIN_EXAMPLE
$ git branch -av
 * 9.0                 7c11d4e [en avance de 2, en retard de 2] [FIX] web_editor: minor tweaks IE11
   remotes/origin/9.0  ce784ae [FIX] account: default value of refund_sequence boolean on journal is False, as the most common practice seems to share the same numbering for invoices and refunds
   remotes/origin/HEAD -> origin/9.0
#+END_EXAMPLE
Si nous souhaitons faire le merge celui-ci va échouer.

/Remarque/: il  n'est pas nécessaire d'écrire  ~remotes/origin/9.0~ au
complet, ~origin/9.0~ suffit.
#+BEGIN_EXAMPLE
$ git merge origin/9.0
Fusion automatique de openerp/tools/mail.py
CONFLIT (ajout/ajout) : Conflit de fusion dans openerp/tools/mail.py
Fusion automatique de openerp/addons/base/tests/test_mail.py
CONFLIT (ajout/ajout) : Conflit de fusion dans openerp/addons/base/tests/test_mail.py
Fusion automatique de addons/sale_stock/res_config.py
CONFLIT (ajout/ajout) : Conflit de fusion dans addons/sale_stock/res_config.py
Fusion automatique de addons/account/models/chart_template.py
CONFLIT (ajout/ajout) : Conflit de fusion dans addons/account/models/chart_template.py
Fusion automatique de addons/account/models/account_bank_statement.py
CONFLIT (ajout/ajout) : Conflit de fusion dans addons/account/models/account_bank_statement.py
Fusion automatique de addons/account/models/account.py
CONFLIT (ajout/ajout) : Conflit de fusion dans addons/account/models/account.py
La fusion automatique a échoué ; réglez les conflits et validez le résultat.
#+END_EXAMPLE
Il est bien sûr hors de question de régler les conflits nous-mêmes.

Nous allons  remettre notre  dépôt local odoo  dans son  état originel
avec une commande à manipuler avec précaution ~git reset --hard~ avant
d'approfondir  le  fetch  et  arriver  à  reconstruire  un  historique
cohérent des commits qui inclue notre HEAD.
#+BEGIN_EXAMPLE
$ git reset --hard
HEAD est maintenant à 7c11d4e [FIX] web_editor: minor tweaks IE11
#+END_EXAMPLE

* Clonage de machines virtuelles sur Proxmox
Sur l'arborescence du menu de droite, clic droit sur dev0 et choisir cloner. Donner un nouveau nom à la machine et choisir ~qcow2~ comme type de disque.
Lancer le clone et se connecter dessus avec
#+BEGIN_SRC sh
ssh dev@192.168.1.9
#+END_SRC
Éditer le fichier ~/etc/hosts~ en remplaçant ~dev0~ par le nouveau nom d'hôte qu'on souhaite donner à la machine.
#+BEGIN_SRC sh
sudo hostnamectl set-hostname nouveaunom
#+END_SRC
Éditeur le fichier ~/etc/network/interface~ et remplacer ~192.168.1.9~ par la nouvelle adresse.
#+BEGIN_EXAMPLE
auto vmbr0
iface vmbr0 inet static
      address 192.168.1.9
#+END_EXAMPLE
Attention, il est nécessaire de changer les clés ssh du serveur sur la machine clone
#+BEGIN_SRC sh
sudo rm /etc/ssh/ssh_host_*
sudo dpkg-reconfigure openssh-server
#+END_SRC
Redémarrer
#+BEGIN_SRC sh
sudo shutdown -r now
#+END_SRC
Si votre shell ne vous redonne pas la main utiliser la séquence suivante pour vous détacher
[Enter] [~] [.] (Enter tilde point)
La nouvelle machine est désormais accessible en ssh sous son nouveau nom.
#+BEGIN_SRC sh
ssh dev@nouveaunom.local
#+END_SRC
* Partage samba
Les instructions de partage à faire figurer dans le fichier de configuration samba
/etc/samba/smb.conf
#+BEGIN_EXAMPLE
[odoo]
	path=/home/dev/path/to/odoo
	guest ok = yes
	read only = no
	force group = dev
	force user = dev
	create mask = 0655
	force directory mode = 0755
#+END_EXAMPLE
* Apt-cacher-ng
https://www.unix-ag.uni-kl.de/~bloch/acng/html/howtos.html#howto-importiso
#+BEGIN_SRC sh
sudo mount -o umask=0022,gid=1002,uid=1002 /dev/sdb1 mdd
sudo mount -o loop mdd/debian830_dvd/debian-8.3.0-amd64-DVD-3.iso miso
sudo ln -s /home/aziz/miso/pool/ /home/aziz/apt-cacher-ng/_import/
#+END_SRC
Browse http://192.168.1.10:3142 to import in apt-cacher-ng
#+BEGIN_SRC sh
sudo rm apt-cacher-ng/_import/pool
sudo umount miso
#+END_SRC
* Lenteur authentification SSH
In file /etc/ssh/sshd_config
#+BEGIN_EXAMPLE
    GSSAPIAuthentication no
    # GSSAPIAuthentication yes

#+END_EXAMPLE
No need to restart
#+BEGIN_EXAMPLE
UseDNS no
#+END_EXAMPLE
Need restart

Ne donne pas d'améliorations notables
* Machines virtuelles déplacée
Proxmox crée des images disque dans /var/lib/vz
Étant donné que la partition /var est limitée à 2.7G le répertoire a été déplacé dans
/home/aziz/vz
Un lien symbolique a été crée à l'ancien emplacement
#+BEGIN_SRC sh
cp -R /var/lib/vz /home/aziz
mv /var/lib/vz /var/lib/vz2
# Proxomox crée rapidement et automatiquement un dossier vz dans /var/lib
# il faut donc s'y prendre rapidement pour créer le lien symbolique
# En faisant suivre les commandes tel que suit c'est possible
rm -r /var/lib/vz && ln -s /home/aziz/vz /var/lib/vz
rm -r /var/lib/vz2
#+END_SRC

* Instance Odoo
Il existe une instance odoo tournant sur debian-IGPRO.

+Sa mise en place n'est pas documentée.+

http://openies.com/install-openerp-odoo-9-on-ubuntu-server-14-04-lts/
#+BEGIN_SRC sh
# Create Odoo System User that will own and run the odoo application.
sudo adduser --system --home=/opt/odoo --group odoo
# Install and Configure Postgres
sudo apt-get install postgresql
# OR
# Create the file /etc/apt/sources.list.d/pgdg.list, and add a line for the
# repository using vim or nano editor
# deb http://apt.postgresql.org/pub/repos/apt/ trusty-pgdg main
# Import the repository signing key, and update the package lists
# wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
# After installing postgres 9.4, change to the postgres user so we have the
# necessary privileges to configure the database
sudo su - postgres
# Now create a new database user with access to create and drop database.
createuser --createdb --username postgres --no-createrole --no-superuser --pwprompt odoo
# Enter password for new role: ********
# Enter it again: ********
exit
# Install the necessary libraries
sudo apt-get install python-pip python-dev libevent-dev gcc libxml2-dev libxslt-dev node-less libldap2-dev libssl-dev libsasl2-dev
# Note : Odoo 9 is depends on node-less
# After installing this system libraries we can install python libraries using
# pip. Create requirement.txt file in server.
cd /tmp && wget https://raw.githubusercontent.com/odoo/odoo/9.0/ requirements.txt && sudo pip install -r requirements.txt
# Install wkhtmltopdf
# wkhtmltopdf is necessary for odoo’s Qweb templating.
# http://download.gna.or/wkhtmltopdf/0.12/0.12.2.1/wkhtmltox-0.12.2.1_linux-trusty-amd64.deb
sudo dpkg -i /tmp/wkhtmltox-0.12.2.1_linux-trusty-amd64.deb
# Now we will Install Git in order to get the code from github:
sudo apt-get install git
# Switch to the Odoo user:
sudo su - odoo -s /bin/bash
# Grab a copy of the most current Odoo 9(master) branch (Note the “.” at the end of this command!):
git clone https://www.github.com/odoo/odoo --depth 1 --branch 9.0 --single-branch .
# Configuring the Odoo application
# The   default   configuration   file   for   the   server   is   under
# /opt/odoo/debian/ openerp-server.conf.  we’ll copy that file  to where
# we need it and change it’s ownership and permissions:
cd /etc && mkdir odoo
sudo cp /opt/odoo/debian/openerp-server.conf /etc/odoo/odoo-server.conf
sudo chown odoo: /etc/odoo/odoo-server.conf
sudo chmod 640 /etc/odoo/odoo-server.conf
# To allow odoo to use default addons you need to change the addons_path line in
# config file addons_path = /usr/lib/python2.7/dist-packages/openerp/addons in
# the config file to addons_path = /opt/odoo/addons

# Installing the Init script
sudo cp /opt/odoo/debian/init /etc/init.d/odoo-server
sudo chmod 755 /etc/init.d/odoo-server
sudo chown root: /etc/init.d/odoo-server
# create odoo directory under /var/log/
sudo mkdir /var/log/odoo
cd /var/log/odoo
cat > odoo-server.log
# give the permission to writable by the odoo user
sudo chmod 755 /var/log/odoo/odoo-server.log
sudo chown odoo:root -R /var/log/odoo/
# Testing the odoo server
sudo /etc/init.d/odoo-server start
sudo tail -f /var/log/odoo/odoo-server.log
sudo /etc/init.d/odoo-server stop

# Atomizing Odoo server startup
sudo update-rc.d odoo-server defaults
#+END_SRC

* Init
Ce dépôt contient les configurations en cours sur debian-IGPRO.

Le système héberge un serveur Proxmox qui permet la gestion des machines virtuelles

Le fichier ~network/interfaces~ gère les NIC virtuels servant aux bridges
